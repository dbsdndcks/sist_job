/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-22 10:19:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.asd.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import user.VO.ReviewVO;
import java.util.List;
import user.DAO.ReviewDAO;
import VO.MovieVO;
import user.DAO.MovieDetailDAO;

public final class movieDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1715750612809L));
    _jspx_dependants.put("jar:file:/C:/E/dev/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/theater_prj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("user.VO.ReviewVO");
    _jspx_imports_classes.add("user.DAO.ReviewDAO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("user.DAO.MovieDetailDAO");
    _jspx_imports_classes.add("VO.MovieVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n");
      out.write("<meta http-equiv=\"Expires\" content=\"-1\" />\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"No-Cache\" />\r\n");
      out.write("<meta http-equiv=\"imagetoolbar\" content=\"no\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=1024\" />\r\n");
      out.write("<meta name=\"keywords\"\r\n");
      out.write("	content=\"CGV, 시지브이, 영화관, 극장, 영화, 티켓, 박스오피스, 극장, Movie, Theater, Cinema, Cgv, cgv, 예매, 상영작\" />\r\n");
      out.write("<meta name=\"description\"\r\n");
      out.write("	content=\"영화 그 이상의 다양하고 즐거운 몰입의 경험을 만듭니다. 라이프스타일 플랫폼 CGV\" />\r\n");
      out.write("<meta property=\"og:site_name\" content=\"영화 그 이상의 감동. CGV\" />\r\n");
      out.write("<meta id=\"ctl00_og_title\" property=\"og:title\"\r\n");
      out.write("	content=\"범죄도시4 | 영화 그 이상의 감동. CGV\"></meta>\r\n");
      out.write("\r\n");
      out.write("<!-- 24.02 네이버 웹 검색 연관 채널 방식 수정 -->\r\n");
      out.write("<script type=\"application/ld+json\">\r\n");
      out.write("    {\r\n");
      out.write("         \"@context\": \"http://schema.org\",\r\n");
      out.write("         \"@type\": \"Organization\",\r\n");
      out.write("         \"name\": \"CGV\",\r\n");
      out.write("         \"url\": \"https://www.cgv.co.kr\",\r\n");
      out.write("         \"sameAs\": [\r\n");
      out.write("           \"https://www.instagram.com/cgv_korea/\",\r\n");
      out.write("           \"https://www.youtube.com/channel/UCmjUMtUw6wXLrsULdxuXWdg\",\r\n");
      out.write("           \"https://www.facebook.com/CJCGV\",\r\n");
      out.write("           \"https://play.google.com/store/apps/details?id=com.cgv.android.movieapp&pli=1\" ]\r\n");
      out.write("    }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("<!-- 무비상세 css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/movieDetail.css\">\r\n");
      out.write("<meta id=\"ctl00_og_image\" property=\"og:image\" content=\"https://img.cgv.co.kr/Movie/Thumbnail/Poster/000088/88104/88104_185.jpg\"></meta>\r\n");
      out.write("<link rel=\"alternate\" href=\"http://m.cgv.co.kr\" />\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"../favicon.ico\" type=\"image/x-icon\" />\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"https://img.cgv.co.kr/R2014/images/favicon.ico\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/webfont.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/reset.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"../css/layout.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/module.css?20211209\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/content.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/common.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/eggupdate.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"print\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/print.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/js/jquery.ui/smoothness/jquery-ui-1.10.4.custom.min.css\" />\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/extraTheaters.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/app.config.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery-1.10.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.tmpl.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.validate.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.paging.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.ui/jquery-ui-1.10.4.custom.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.utils.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/app.utils.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.utils.pageing.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/app.init.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.placeholder.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.dotdotdot.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/silverlight_link.js\"></script>\r\n");
      out.write("<script src=\"https://img.cgv.co.kr/R2014/js/slick/slick.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/phototicket/phototicket.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/slick.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/slick-theme-custom.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/icheck/login.timer.js\"></script>\r\n");
      out.write("<script src=\"https://img.cgv.co.kr/R2014/js/icheck/icheck.min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/js/icheck/iCheck.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/preegg.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/giftstore/giftstore.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/giftstore/commonstore.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/giftstore/giftstore.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.cgv.co.kr/resource_pc/css/cgv.min.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/resource_pc/js/cgvUi.js\"></script>\r\n");
      out.write("<link href=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jquery.jqplot.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jquery.jqplot.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jqplot.barRenderer.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jqplot.pieRenderer.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jqplot.donutRenderer.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jqplot.categoryAxisRenderer.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.jqplot/jqplot.pointLabels.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/Chart.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/amcharts.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/radar.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* 별점 아이콘 스타일링 */\r\n");
      out.write(".star-rating::before {\r\n");
      out.write("	content: '★★★★★';\r\n");
      out.write("	letter-spacing: 0.1em;\r\n");
      out.write("	color: #ccc; /* 별점의 기본 색상 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 실제 별점에 따라 색상을 변경하는 스타일 */\r\n");
      out.write(".review-item .star-rating::before {\r\n");
      out.write("	content: '★★★★★';\r\n");
      out.write("	letter-spacing: 0.1em;\r\n");
      out.write("	color: #f7d51d; /* 별점의 색상을 변경하려면 원하는 색상으로 변경 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 리뷰 리스트 스타일 */\r\n");
      out.write(".review-list {\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".review-item {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-id {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".review-content {\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 별점에 따라 별이 채워지도록 수정 */\r\n");
      out.write(".star-rating[data-rating=\"1\"]::before {\r\n");
      out.write("	content: '★☆☆☆☆'; /* 1점일 때 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".star-rating[data-rating=\"2\"]::before {\r\n");
      out.write("	content: '★★☆☆☆'; /* 2점일 때 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".star-rating[data-rating=\"3\"]::before {\r\n");
      out.write("	content: '★★★☆☆'; /* 3점일 때 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".star-rating[data-rating=\"4\"]::before {\r\n");
      out.write("	content: '★★★★☆'; /* 4점일 때 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".star-rating[data-rating=\"5\"]::before {\r\n");
      out.write("	content: '★★★★★'; /* 5점일 때 */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    $(function() {\r\n");
      out.write("    	//스틸컷 버튼 클릭시 스크롤 이동\r\n");
      out.write("		$(\"#focuseStillCut\").click(function(){\r\n");
      out.write("			var offset = $(\"#focuseStillCut\").offset();\r\n");
      out.write("			$(\"html, body\").animate({scrollTop: offset.top},400); \r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("    	//평점/리뷰 버튼 클릭시 스크롤 이동\r\n");
      out.write("		$(\"#focuseStillCut\").click(function(){\r\n");
      out.write("			var offset = $(\"#focuseStillCut\").offset();\r\n");
      out.write("			$(\"html, body\").animate({scrollTop: offset.top},400); \r\n");
      out.write("		})\r\n");
      out.write("		$(\"#focuseReview\").click(function(){\r\n");
      out.write("			var offset = $(\"#reviewTime\").offset();\r\n");
      out.write("			$(\"html, body\").animate({scrollTop: offset.top},400); \r\n");
      out.write("		})\r\n");
      out.write("    }); // ready\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"\">\r\n");
      out.write("	<div class=\"skipnaiv\">\r\n");
      out.write("		<a href=\"#contents\" id=\"skipHeader\">메인 컨텐츠 바로가기</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"cgvwrap\">\r\n");
      out.write("		<!-- header start-->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("		<!--header end-->\r\n");
      out.write("\r\n");
      out.write("\r\n");

//받은 영화코드 파라미터 저장
String movieCode = request.getParameter("midx");
MovieDetailDAO mdDAO = MovieDetailDAO.getInstance();

MovieVO mVO = mdDAO.selectMovieDetail(movieCode);

String rating = mVO.getMovieRating();
String statusClass = null;
String screeningStatus = mVO.getMovieScreeningStatus();
String description = mVO.getMovieDescription();
//관람 등급 설정

//상영 상태 설정
rating = rating.equals("All") ? "전체 관람가" : rating + "이상 관람가";
if(screeningStatus.equals("Y")){
	screeningStatus = "현재상영중";
    statusClass = "round lightblue";
}else{
	screeningStatus = "미상영작";
    statusClass = "round red";
}
pageContext.setAttribute("movieVO", mVO);


      out.write("\r\n");
      out.write("		<!-- Contaniner -->\r\n");
      out.write("		<div id=\"contaniner\" class=\"\">\r\n");
      out.write("			<!-- 벽돌 배경이미지 사용 시 class=\"bg-bricks\" 적용 / 배경이미지가 없을 경우 class 삭제  -->\r\n");
      out.write("			<!-- Contents Area -->\r\n");
      out.write("			<div id=\"contents\" class=\"\">\r\n");
      out.write("				<!-- Contents Start -->\r\n");
      out.write("				<!-- 실컨텐츠 시작 -->\r\n");
      out.write("				<div class=\"wrap-movie-detail\" id=\"select_main\">\r\n");
      out.write("\r\n");
      out.write("					<div class=\"sect-base-movie\">\r\n");
      out.write("						<h3>\r\n");
      out.write("							<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>기본정보\r\n");
      out.write("						</h3>\r\n");
      out.write("						<div class=\"box-image\">\r\n");
      out.write("							<a href=\"#\"title=\"포스터 크게 보기 새창\" target=\"_blank\"> <span\r\n");
      out.write("								class=\"thumb-image\"> <img src=\"../images/movie/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.moviePosterPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("									<span class=\"ico-posterdetail\">포스터 크게 보기</span> <!-- 영상물 등급 노출 변경 2022.08.24 -->\r\n");
      out.write("									<i class=\"cgvIcon etc age");
      out.print(rating);
      out.write('"');
      out.write('>');
      out.print(rating );
      out.write("</i> <!--<span class=\"ico-grade 15\"> 15</span> -->\r\n");
      out.write("							</span>\r\n");
      out.write("							</a>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"box-contents\">\r\n");
      out.write("							<div class=\"title\">\r\n");
      out.write("								<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong> <em class=\"");
      out.print(statusClass );
      out.write("\"><span>");
      out.print(screeningStatus );
      out.write("</span></em>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"spec\">\r\n");
      out.write("								<dl>\r\n");
      out.write("									<dt>\r\n");
      out.write("										감독 :");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dt>\r\n");
      out.write("									<dt>\r\n");
      out.write("										/ 주연배우 :");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieMainActor}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("										/ 조연배우 :");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieSubActor}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("									</dt>\r\n");
      out.write("									<dt>\r\n");
      out.write("										장르 :");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieGenre}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dt>\r\n");
      out.write("									<dd></dd>\r\n");
      out.write("									<dt>/ 기본 정보 :</dt>\r\n");
      out.write("									<dd class=\"on\">");
      out.print(rating);
      out.write(',');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieRunningTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dd>\r\n");
      out.write("									<dt>개봉 :</dt>\r\n");
      out.write("									<dd class=\"on\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.movieReleaseDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dd>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("								</dl>\r\n");
      out.write("							</div>\r\n");
      out.write("							<span class=\"like\"> <!-- 예매하기 --> <a\r\n");
      out.write("								class=\"link-reservation\" href=\"ticket.jsp\">예매</a>\r\n");
      out.write("							</span>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"cols-content\" id=\"menu\">\r\n");
      out.write("						<div class=\"col-detail\">\r\n");
      out.write("							<!-- 메뉴가 선택되면 a 에 title=\"선택\" 이라고 넣는다 -->\r\n");
      out.write("							<ul class=\"tab-menu\">\r\n");
      out.write("								<li><a\r\n");
      out.write("									href=\"#\" id=\"focuseStillCut\">스틸컷</a></li>\r\n");
      out.write("								<li><a href=\"#\" id=\"focuseReview\">평점/리뷰</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("							<div class=\"sect-story-movie\">\r\n");
      out.write("								");

							    String[] descriptionLines = description.split("[!?\"\\.]");
								for (String line : descriptionLines) {
								
      out.write("\r\n");
      out.write("								");
      out.print(line.trim());
      out.write(".<br>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- .sect-trailer -->\r\n");
      out.write("							<div id=\"ctl00_PlaceHolderContent_Section_Still_Cut\"\r\n");
      out.write("								class=\"sect-stillcut\">\r\n");
      out.write("								<div class=\"heading\">\r\n");
      out.write("									<h4>스틸컷</h4>\r\n");
      out.write("									<span class=\"count\"><strong id=\"stillcut_current\">1</strong>/2</span><a\r\n");
      out.write("										class=\"link-more\" href=\"#\">더보기</a>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"slider-wrap\">\r\n");
      out.write("									<div class=\"slider\" id=\"still_motion\">\r\n");
      out.write("\r\n");
      out.write("										<div class=\"item-wrap\">\r\n");
      out.write("											<div class=\"item\">\r\n");
      out.write("												<img\r\n");
      out.write("													data-src=\"../images/movie/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.moviePosterPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("													alt=\"범죄도시4\" onerror=\"errorImage(this)\" />\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"item-wrap\">\r\n");
      out.write("											<div class=\"item\">\r\n");
      out.write("												<img\r\n");
      out.write("													data-src=\"../images/movie/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movieVO.moviePosterPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("													alt=\"범죄도시4\" onerror=\"errorImage(this)\" />\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("										<button type=\"button\" class=\"btn-prev\">이전 페이지 이동</button>\r\n");
      out.write("										<button type=\"button\" class=\"btn-next\">다음 페이지 이동</button>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"paging\">\r\n");
      out.write("								<ul id=\"paging_point\"></ul>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"reviewTime\">\r\n");
      out.write("					<h1 class=\"rowLine\">Review</h1>\r\n");
      out.write("					<ul class=\"sort\" id=\"sortTab\">\r\n");
      out.write("					\r\n");
      out.write("						<li class=\"sortTab");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty param.type or param.type eq '1' ? ' on': '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"test\"><a\r\n");
      out.write("							href=\"#void\" onclick=\"setReview('movieDetail.jsp',1,'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.midx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\" title=\"현재선택\">최신순\r\n");
      out.write("							<span class=\"arrow-down\"></span>\r\n");
      out.write("								</a></li>\r\n");
      out.write("						<li class=\"sortTab");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${  param.type eq '2' ? ' on': '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><a href=\"#void\" onclick= \"setReview('movieDetail.jsp',2,'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.midx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\">별점순\r\n");
      out.write("						<span class=\"arrow-down\"></span>\r\n");
      out.write("						</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("				<script type=\"text/javascript\">\r\n");
      out.write("				\r\n");
      out.write("				function setReview(url, type, midx) {\r\n");
      out.write("					location.href = url + \"?type=\" + type + \"&midx=\" + midx;\r\n");
      out.write("				}\r\n");
      out.write("$(function() {\r\n");
      out.write("    var sortTabs = $(\".sortTab\"); // 모든 정렬 탭을 선택합니다.\r\n");
      out.write("\r\n");
      out.write("    // 각 탭에 대해 클릭 이벤트를 추가합니다.\r\n");
      out.write("    sortTabs.click(function() {\r\n");
      out.write("        // 모든 탭의 클래스를 제거합니다.\r\n");
      out.write("        sortTabs.removeClass(\"on\");\r\n");
      out.write("\r\n");
      out.write("        // 클릭된 탭에 클래스를 추가합니다.\r\n");
      out.write("        $(this).addClass(\"on\");\r\n");
      out.write("\r\n");
      out.write("        // 클릭된 탭의 화살표 요소를 찾습니다.\r\n");
      out.write("        var arrow = $(this).find(\".arrow-down\");\r\n");
      out.write("\r\n");
      out.write("        // 다른 탭의 화살표를 숨깁니다.\r\n");
      out.write("        $(\".arrow-down\").hide();\r\n");
      out.write("\r\n");
      out.write("        // 클릭된 탭의 화살표를 보여줍니다.\r\n");
      out.write("        if (arrow.length > 0) {\r\n");
      out.write("            arrow.show();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("				<div class=\"review-list\">\r\n");
      out.write("					<ul style=\"margin: 0 auto; width: fit-content;\">\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- //end review-list-->\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 별점 리뷰함수 -->\r\n");
      out.write("			<script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("    	// 페이지 로드 시 별점 데이터를 가져와서 HTML에 채워넣음\r\n");
      out.write("    	function fetchStarRatings() {\r\n");
      out.write("    	    // 서버로부터 별점 데이터를 가져와서 처리하는 코드\r\n");
      out.write("    	    // 예: $.ajax 를 사용하여 API 호출\r\n");
      out.write("    	    // 별점 데이터를 가져온 후 아래의 함수 호출: displayStarRatings(starData);\r\n");
      out.write("\r\n");
      out.write("    	    ");

    	    	ReviewDAO rvDAO = ReviewDAO.getInstance();
    	    	List<ReviewVO> reviewList = null;
    	    	
    	    	String type = request.getParameter("type");
    	    	if(type == null) {
    	    		type = "1";
    	    	}//end if
    	    	
    	    	if("1".equals(type)) {
    	    		reviewList =rvDAO.selectRecentReviewList(movieCode);
    	    	}else{
    	    		reviewList =rvDAO.selectScoreReviewList(movieCode);
    	    	}//end else
    	    	
    	    	
    	    	ReviewVO rvVO = null;
    	    
      out.write("\r\n");
      out.write("    	    var starData = [\r\n");
      out.write("    	    ");

    	    for(int i = 0; i < reviewList.size(); i++ ){
      out.write("\r\n");
      out.write("    	    ");
rvVO = reviewList.get(i);
      out.write("\r\n");
      out.write("    	    	{ userId: \"");
      out.print( rvVO.getUserId());
      out.write("\", rating: ");
      out.print( rvVO.getReviewScore());
      out.write(", reviewContent: \"");
      out.print( rvVO.getReviewContent() );
      out.write("\" },\r\n");
      out.write("    	   ");
}
      out.write("\r\n");
      out.write("    	    ];\r\n");
      out.write("    	   \r\n");
      out.write("    	    /*\r\n");
      out.write("    	    // 가상의 별점 데이터 (예시)\r\n");
      out.write("    	    var starData = [\r\n");
      out.write("    	        { userId: \"사용자1\", rating: 5, reviewContent: \"리뷰 내용1\" },\r\n");
      out.write("    	        { userId: \"사용자2\", rating: 4, reviewContent: \"리뷰 내용2\" },\r\n");
      out.write("    	        { userId: \"사용자3\", rating: 1, reviewContent: \"리뷰 내용3\" },\r\n");
      out.write("    	        { userId: \"사용자4\", rating: 5, reviewContent: \"리뷰 내용4\" },\r\n");
      out.write("    	        { userId: \"사용자5\", rating: 5, reviewContent: \"리뷰 내용5\" },\r\n");
      out.write("    	        { userId: \"사용자6\", rating: 3, reviewContent: \"리뷰 내용6\" },\r\n");
      out.write("    	        { userId: \"사용자7\", rating: 5, reviewContent: \"리뷰 내용7\" },\r\n");
      out.write("    	        { userId: \"사용자8\", rating: 2, reviewContent: \"리뷰 내용8\" },\r\n");
      out.write("    	        { userId: \"사용자9\", rating: 3, reviewContent: \"리뷰 내용9\" },\r\n");
      out.write("    	        { userId: \"사용자10\", rating: 1, reviewContent: \"리뷰 내용10\" },\r\n");
      out.write("    	        // 여기에 별점 데이터 추가\r\n");
      out.write("    	    ];\r\n");
      out.write("    	    */\r\n");
      out.write("\r\n");
      out.write("    	    // 별점 데이터를 가져온 후 아래의 함수 호출\r\n");
      out.write("    	    displayStarRatings(starData);\r\n");
      out.write("    	    alert(\"안녕하세요\")\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("    	// 별점을 HTML에 채워넣는 함수\r\n");
      out.write("    	function displayStarRatings(starData) {\r\n");
      out.write("    	    var $reviewList = $('.review-list ul');\r\n");
      out.write("    	    $reviewList.empty(); // 기존의 리뷰 리스트를 비움\r\n");
      out.write("\r\n");
      out.write("    	    // 가져온 별점 데이터를 기반으로 리뷰 아이템을 생성하여 추가\r\n");
      out.write("    	    for (var i = 0; i < starData.length; i++) {\r\n");
      out.write("    	        var starRating = starData[i];\r\n");
      out.write("    	        var $reviewItem = $('<li><div class=\"review-item\"><span class=\"user-id\">' + starRating.userId + '</span><span class=\"star-rating\" data-rating=\"' + starRating.rating + '\"></span><div class=\"review-content\">' + starRating.reviewContent + '</div></div></li>');\r\n");
      out.write("    	        $reviewList.append($reviewItem);\r\n");
      out.write("    	    }\r\n");
      out.write("    	    // 별점 데이터를 가져와서 HTML에 채워넣은 후에 각 별점 아이콘에 적절한 색상을 적용하기 위해 별점 아이콘의 data-rating 속성을 설정\r\n");
      out.write("    	    $reviewList.find('.star-rating').each(function() {\r\n");
      out.write("    	        var rating = $(this).data('rating');\r\n");
      out.write("    	        $(this).attr('data-rating', rating); // data-rating 속성 설정\r\n");
      out.write("    	    });\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("    	// 페이지 로드 시 별점 데이터를 가져와서 HTML에 채워넣음\r\n");
      out.write("    	fetchStarRatings();\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<script type=\"text/javascript\">\r\n");
      out.write("//<![CDATA[\r\n");
      out.write("var commentOptions;\r\n");
      out.write("    (function ($) {\r\n");
      out.write("        $(function () {\r\n");
      out.write("\r\n");
      out.write("            var myPointPage = 0;    \r\n");
      out.write("            var mypointYN = false;    \r\n");
      out.write("            var mypointPaneltyYN = false;    \r\n");
      out.write("            var mypointShowViewYN = false;    \r\n");
      out.write("\r\n");
      out.write("            // 성별/연령별 예매분포 차트 추가\r\n");
      out.write("            var data = {\r\n");
      out.write("                    \r\n");
      out.write("                    age: [\r\n");
      out.write("                [\"10대\", 2.2],[\"20대\", 24.8],[\"30대\", 32.6],[\"40대\", 23.3],[\"50대\", 17.1]\r\n");
      out.write("                    ],\r\n");
      out.write("                    sex: [\r\n");
      out.write("                 [\"남 48.4%\", 48.4],[\"여 51.6%\", 51.6]\r\n");
      out.write("                    ]\r\n");
      out.write("\r\n");
      out.write("                };\r\n");
      out.write("                            \r\n");
      out.write("            $('#jqplot_sex').graphChart({ 'type': 'donut', 'data': data.sex });\r\n");
      out.write("            $('#jqplot_age').graphChart({ 'type': 'bar', 'data': data.age });\r\n");
      out.write("            // 성별/연령별 예매분포 차트 추가\r\n");
      out.write("\r\n");
      out.write("            //첫 로딩시 호출, 첫 로딩시는 \"실관람객\"탭이 디폴트여서 실관람객 평이 있냐 여부를 따져야 리스트 갯수가 맞게 나온다. \"setMypointAttribute()\"함수로 대처시 callback이 setMyPointBuild() 함수와 겹쳐 오락가락 하게 된다%>\r\n");
      out.write("            setMypointAttributeFirstLoding();\r\n");
      out.write("            searchPointList(1, true, 1, 0);              // 첫 로딩시 평점 조회    \r\n");
      out.write("   \r\n");
      out.write("            var $stillCut = $('#still_motion'),\r\n");
      out.write("                $stillCutCurrent = $('#stillcut_current'),\r\n");
      out.write("                stillOptions = { 'type': 'photo', 'onBeforeHandler': onBeforeHandler };\r\n");
      out.write("\r\n");
      out.write("            function onBeforeHandler(_index) {\r\n");
      out.write("                $stillCutCurrent.text(_index + 1);\r\n");
      out.write("            }\r\n");
      out.write("            $stillCut.visualMotion(stillOptions);\r\n");
      out.write("\r\n");
      out.write("                       \r\n");
      out.write("            \r\n");
      out.write("            // 평점 리스트 조회\r\n");
      out.write("            function searchPointList(page, isGetTotalCount, filterType, orderType) {\r\n");
      out.write("                myPointPage = page;\r\n");
      out.write("                \r\n");
      out.write("                filterType= 1;\r\n");
      out.write("                if(!orderType) {\r\n");
      out.write("                    orderType = $('.sort>li.on').data('order-type');\r\n");
      out.write("                }                \r\n");
      out.write("\r\n");
      out.write("                // 첫로딩후 페이지 이동시 IsGetTotalCount = false 처리됨\r\n");
      out.write("                // 첫로딩시 setPointListBuild()에서 result.TotalCount:전체평점갯수, 페이지 이동시 result.TotalCount:0\r\n");
      out.write("                if(!isGetTotalCount) { isGetTotalCount = false; }\r\n");
      out.write("\r\n");
      out.write("                var isMyPageIndex = 6;\r\n");
      out.write("                var isMyPoint = false;\r\n");
      out.write("                if(mypointYN) {        //내가 쓴 평점이 있다면(첫페이지만 5개 가져온다, 이후는 6개씩) \r\n");
      out.write("                    if (filterType == \"1\" && mypointShowViewYN) {      //추가 : 실관람객탭이면서 실관람객인지\r\n");
      out.write("                        isMyPoint = true;\r\n");
      out.write("                    }else if (filterType == \"2\" && mypointPaneltyYN) {//추가 :  패널티탭이면서 패널티회원인지\r\n");
      out.write("                        isMyPoint = true;\r\n");
      out.write("                    }else if (filterType == \"0\") {                          //추가 :  전체탭\r\n");
      out.write("                        isMyPoint = true;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                                \r\n");
      out.write("	            $.ajax({\r\n");
      out.write("	                type: \"POST\",\r\n");
      out.write("	                url: '/common/ajax/point.aspx/GetMoviePointVariableList',\r\n");
      out.write("	                data: \"{ 'movieIdx': 88104, 'pageIndex': \" + page + \", 'pageSize': \" + isMyPageIndex + \", 'orderType': \" + orderType + \", 'filterType': 1, 'isTotalCount' : \" + isGetTotalCount + \", 'isMyPoint' : '\" + isMyPoint + \"' }\",\r\n");
      out.write("	                contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("	                dataType: 'json',\r\n");
      out.write("	                success: function (result) {\r\n");
      out.write("						setPointListBuild($.parseJSON(result.d));\r\n");
      out.write("	                }\r\n");
      out.write("	            });                                \r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            /* 첫로딩시 1번만 호출, 내가 쓴평점이 있는지 전영변수 세팅 및 체크 하는 함수 */            \r\n");
      out.write("            function setMypointAttributeFirstLoding() {\r\n");
      out.write("                            \r\n");
      out.write("            } \r\n");
      out.write("        });\r\n");
      out.write("    })(jQuery);\r\n");
      out.write("//]]>\r\n");
      out.write("</script>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- /Contents Area -->\r\n");
      out.write("\r\n");
      out.write("		<!-- E Contaniner -->\r\n");
      out.write("\r\n");
      out.write("		<!-- S 예매하기 및 TOP Fixed 버튼 -->\r\n");
      out.write("		<div class=\"fixedBtn_wrap\">\r\n");
      out.write("\r\n");
      out.write("			<a href=\"ticket.jsp\" class=\"btn_fixedTicketing\">예매하기</a> <a\r\n");
      out.write("				href=\"#none\" class=\"btn_gotoTop\"><img\r\n");
      out.write("				src=\"https://img.cgv.co.kr/R2014/images/common/btn/gotoTop.png\"\r\n");
      out.write("				alt=\"최상단으로 이동\" /></a>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- E 예매하기 및 TOP Fixed 버튼 -->\r\n");
      out.write("\r\n");
      out.write("		<!-- S Footer -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- S Footer -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("		<!-- S Footer -->\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
