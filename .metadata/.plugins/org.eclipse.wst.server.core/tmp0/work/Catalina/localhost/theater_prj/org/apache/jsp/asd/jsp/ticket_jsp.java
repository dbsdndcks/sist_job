/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-22 10:22:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.asd.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import java.util.ArrayList;
import user.VO.ReservingVO;
import java.util.List;
import user.DAO.ReservingDAO;
import java.util.Locale;
import java.time.format.TextStyle;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;

public final class ticket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "예매 첫 페이지";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1715750612809L));
    _jspx_dependants.put("jar:file:/C:/E/dev/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/theater_prj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/E/dev/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/theater_prj/WEB-INF/lib/standard.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(9);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.time.format.TextStyle");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("user.VO.ReservingVO");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.time.LocalDateTime");
    _jspx_imports_classes.add("user.DAO.ReservingDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n");
      out.write("<meta http-equiv=\"Expires\" content=\"-1\" />\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"No-Cache\" />\r\n");
      out.write("<meta http-equiv=\"imagetoolbar\" content=\"no\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=1024\" />\r\n");
      out.write("\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"../favicon.ico\" type=\"image/x-icon\" />\r\n");
      out.write("<title id=\"ctl00_headerTitle\">예매 | 명화 그 이상의 감동. 띵화관</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/webfont.css\" />\r\n");
      out.write("<!-- <link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"../css/reset.css\" /> -->\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"../css/layout.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"../css/module.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/content.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/common.css\" />\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/eggupdate.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"print\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/print.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/js/jquery.ui/smoothness/jquery-ui-1.10.4.custom.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://img.cgv.co.kr/CGV_RIA/Ticket/Common/css/2024/0325/FORM_TYPE/reservation_tnb.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- <script type=\"text/javascript\" src=\"/common/js/extraTheaters.js\"></script> -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/app.config.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery-1.10.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.tmpl.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.validate.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.paging.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.ui/jquery-ui-1.10.4.custom.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.utils.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/app.utils.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.utils.pageing.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/app.init.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/jquery.plugin/jquery.dotdotdot.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/silverlight_link.js\"></script>\r\n");
      out.write("<script src=\"https://img.cgv.co.kr/R2014/js/slick/slick.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/phototicket/phototicket.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/slick.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/slick-theme-custom.css\" />\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/icheck/login.timer.js\"></script>\r\n");
      out.write("<script src=\"https://img.cgv.co.kr/R2014/js/icheck/icheck.min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/js/icheck/iCheck.css\" />\r\n");
      out.write("\r\n");
      out.write("<!-- 홈페이지 CSS 일원화로 인한 반영 20220721 -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.cgv.co.kr/resource_pc/css/cgv.min.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/resource_pc/js/cgvUi.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- 각페이지 Header Start-->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://img.cgv.co.kr/R2014/js/swiper.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" media=\"all\" type=\"text/css\" href=\"https://img.cgv.co.kr/R2014/css/swiper-bundle.min.css\" />\r\n");
      out.write("\r\n");
      out.write("<!-- 예매 CSS, JS -->\r\n");
      out.write("<link href=\"https://www.cineq.co.kr/bundles/css?v=oiZxrFB4-kROndwe9FLU4L2IiIJAaPO8AdRMkkO1wbE1\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://www.cineq.co.kr/bundles/script?v=BivSx9O848D5V0Qog32Mgvmnh92IWQV9phYbkYbZeJg1\"></script>\r\n");
      out.write("<!-- 예매 CSS, JS -->\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".section-pop-left .wrap-theater .list-movie-name input.p-movie-check:checked ~ .check {\r\n");
      out.write("	background: #f9f9f9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"radio\"] {\r\n");
      out.write("  box-sizing: border-box; /* 1 */\r\n");
      out.write("  padding: 0; /* 2 */\r\n");
      out.write("  opacity: 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- S 로그인 세션 확인  -->\r\n");

// 세션에서 로그인 여부 확인
String id = (String)session.getAttribute("id");
if (id == null) {// 로그인되지 않은 경우 로그인 페이지로 리디렉션

      out.write("<script type=\"text/javascript\">\r\n");
      out.write("alert(\"예매는 로그인 후 가능합니다.\");\r\n");
      out.write("window.location.href = \"login.jsp?prevPage=ticket.jsp\";\r\n");
      out.write("</script>  \r\n");

  }
  
      out.write("<!-- E 로그인 세션 확인  -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function resetMovieList() {\r\n");
      out.write("		$(\"#movieList > li\").remove();\r\n");
      out.write("		$(\"#movieList > p\").remove();\r\n");
      out.write("		$(\"#movieList\").append($(\"<p>\").text(\"날짜와 영화관을 선택하면 영화가 나옵니다.\").css({\"color\":\"#7d7d7d\", \"text-align\":\"center\", \"margin-top\":\"30%\"}));\r\n");
      out.write("	} // resetMovieList\r\n");
      out.write("\r\n");
      out.write("	function resetMovieTime() {\r\n");
      out.write("		$(\".wrap-timetable > .title\").remove();\r\n");
      out.write("		$(\".wrap-timetable > .theater-info\").remove();\r\n");
      out.write("		$(\".wrap-timetable > .time\").remove();\r\n");
      out.write("		$(\".wrap-timetable > p\").remove();\r\n");
      out.write("		$(\".wrap-timetable\").append($(\"<p>\").text(\"영화관과 영화를 선택하면 시간표가 나옵니다.\").addClass(\"ready\"));\r\n");
      out.write("	} // resetMovieTime\r\n");
      out.write("\r\n");
      out.write("	// 현재 날짜 이후에 상영 중인 상영일자 구하기\r\n");
      out.write("	function searchScreeningDate(formattedDate1) {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type: 'POST',\r\n");
      out.write("			url: '/theater_prj/ScreeningDateServlet',\r\n");
      out.write("			success: function(response) {\r\n");
      out.write("				// 받은 JSON 데이터를 파싱하여 표시\r\n");
      out.write("				var data = JSON.parse(response);\r\n");
      out.write("				\r\n");
      out.write("				displayDisabled(response, formattedDate1);\r\n");
      out.write("			},\r\n");
      out.write("			error: function(xhr, status, error) {\r\n");
      out.write("				console.error('Error', error);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	} // searchScreeningDate\r\n");
      out.write("	\r\n");
      out.write("	function displayDisabled(response, formattedDate1) {\r\n");
      out.write("	    var object = JSON.parse(response);\r\n");
      out.write("	    \r\n");
      out.write("	    formattedArray = formattedDate1.split(\",\");\r\n");
      out.write("	    var deleteDate = \"\";\r\n");
      out.write("	    \r\n");
      out.write("	    object.forEach(function(item) {\r\n");
      out.write("	        if (item.screeningDate.includes(formattedArray)) {\r\n");
      out.write("	        	deleteDate = item.screeningDate;\r\n");
      out.write("	        } // end if\r\n");
      out.write("	    });\r\n");
      out.write("	    var deleteIndex = formattedArray.indexOf(deleteDate);\r\n");
      out.write("	    \r\n");
      out.write("	    if(deleteIndex === -1) {\r\n");
      out.write("	    	formattedArray.splice(deleteIndex, 1);\r\n");
      out.write("	    } // end if\r\n");
      out.write("	    \r\n");
      out.write("	    formattedArray.forEach(function(date) {\r\n");
      out.write("		    $(\".cal-week .datelist a[data-date='\" + date + \"']\").removeClass(\"disabled\");\r\n");
      out.write("	    })\r\n");
      out.write("	} // displayDisabled\r\n");
      out.write("\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\"div.section-pop-top\", \"div.popup\").on(\"click\", \"a.btn-rsv-reset\", function() {\r\n");
      out.write("			if (confirm(\"모든 선택정보가 사라집니다. 계속하시겠습니까?\") == false) {\r\n");
      out.write("				return false;\r\n");
      out.write("			} // end if\r\n");
      out.write("			location.href = \"ticket.jsp\"\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\".cal-week\").on(\"click\", \".datelist > a\", function(event){\r\n");
      out.write("		    event.preventDefault();\r\n");
      out.write("		    \r\n");
      out.write("		    if($(this).hasClass(\"disabled\")) {\r\n");
      out.write("				return;\r\n");
      out.write("		    } // end if\r\n");
      out.write("		    \r\n");
      out.write("		    if($(this).hasClass(\"selected\")) {\r\n");
      out.write("				$(\".theater-box a.selected\").removeClass(\"selected\");\r\n");
      out.write("				resetMovieList();\r\n");
      out.write("				resetMovieTime();\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\".cal-week a.selected\").removeClass(\"selected\");\r\n");
      out.write("				$(\".theater-box a.selected\").removeClass(\"selected\");\r\n");
      out.write("				resetMovieList();\r\n");
      out.write("				resetMovieTime();\r\n");
      out.write("				$(this).addClass(\"selected\");\r\n");
      out.write("			} // end else\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		$(\".cal-week\").on(\"click\", \".prev\", function(event) {\r\n");
      out.write("			var now = new Date();\r\n");
      out.write("			var year = now.getFullYear();\r\n");
      out.write("			var month = (now.getMonth() + 1).toString().padStart(2, '0');\r\n");
      out.write("			var day = now.getDate().toString().padStart(2, '0');\r\n");
      out.write("			\r\n");
      out.write("			var formattedDate = year + month + day;\r\n");
      out.write("			\r\n");
      out.write("			// 오늘이면 클릭이벤트 중지\r\n");
      out.write("			if(formattedDate == $(\".today\").attr(\"data-date\")) {\r\n");
      out.write("			    event.preventDefault();\r\n");
      out.write("			} // end if\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\".cal-week\").on(\"click\", \".next\", function(event) {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			\r\n");
      out.write("			// 기존 달력 지우고\r\n");
      out.write("			$(\".cal-week\").remove();\r\n");
      out.write("			\r\n");
      out.write("			// 새로 만들기\r\n");
      out.write("			var ul = $(\"<ul>\").addClass(\"cal-week\");\r\n");
      out.write("			\r\n");
      out.write("			var prevListItem = $(\"<li>\").append($(\"<a>\").attr(\"href\", \"ticket.jsp\")\r\n");
      out.write("							.addClass(\"prev viewDate\").attr(\"data-viewdate\", \"\").text(\"이전\"));\r\n");
      out.write("			ul.append(prevListItem);\r\n");
      out.write("			\r\n");
      out.write("			var daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n");
      out.write("\r\n");
      out.write("			for(var i=10; i<20; i++) {\r\n");
      out.write("				var now = new Date();\r\n");
      out.write("				now.setDate(now.getDate() + i);\r\n");
      out.write("				\r\n");
      out.write("				var year = now.getFullYear();\r\n");
      out.write("				var month = (now.getMonth() + 1).toString().padStart(2, \"0\");\r\n");
      out.write("				var day = now.getDate().toString().padStart(2, \"0\");\r\n");
      out.write("				var day2 = now.getDate().toString().padStart(2, \"\");\r\n");
      out.write("				var dayOfWeek = daysOfWeek[now.getDay()];\r\n");
      out.write("				var formattedDate1 = year + month + day;\r\n");
      out.write("				var formattedDate2 = year + \"-\" + month + \"-\" + day;\r\n");
      out.write("				\r\n");
      out.write("				var listItem = $(\"<li>\").addClass(\"datelist\");\r\n");
      out.write("				var link = $(\"<a>\").attr(\"href\", \"ticket.jsp?screeningDate=\" + formattedDate1)\r\n");
      out.write("								.attr(\"data-date\", formattedDate1)\r\n");
      out.write("								.attr(\"data-selectdate\", formattedDate2)\r\n");
      out.write("								.addClass(\"disabled\")\r\n");
      out.write("								.css(\"margin\", \"0 2px 0 2px\")\r\n");
      out.write("								.click(function(event) {\r\n");
      out.write("									event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("									if($(this).hasClass(\"disabled\")) {\r\n");
      out.write("										return false;\r\n");
      out.write("									} // end if\r\n");
      out.write("									 \r\n");
      out.write("									if($(this).hasClass(\"selected\")) {\r\n");
      out.write("										$(\".theater-box a.selected\").removeClass(\"selected\");\r\n");
      out.write("										resetMovieList();\r\n");
      out.write("										resetMovieTime();\r\n");
      out.write("									} else {\r\n");
      out.write("										$(\".cal-week a.selected\").removeClass(\"selected\");\r\n");
      out.write("										$(\".theater-box a.selected\").removeClass(\"selected\");\r\n");
      out.write("										resetMovieList();\r\n");
      out.write("										resetMovieTime();\r\n");
      out.write("										$(this).addClass(\"selected\");\r\n");
      out.write("									} // end else\r\n");
      out.write("										\r\n");
      out.write("									return false;\r\n");
      out.write("								});\r\n");
      out.write("				\r\n");
      out.write("				searchScreeningDate(formattedDate1);\r\n");
      out.write("				\r\n");
      out.write("				if(dayOfWeek === \"토\") {\r\n");
      out.write("					link.addClass(\"sat \");\r\n");
      out.write("				} else if(dayOfWeek === \"일\") {\r\n");
      out.write("					link.addClass(\"sun \");\r\n");
      out.write("				} // end else if\r\n");
      out.write("				\r\n");
      out.write("				var spanDay = $(\"<span>\").addClass(\"day\").text(dayOfWeek);\r\n");
      out.write("				\r\n");
      out.write("				link.append(spanDay, day2);\r\n");
      out.write("				listItem.append(link);\r\n");
      out.write("				ul.append(listItem);\r\n");
      out.write("			} // end for\r\n");
      out.write("			\r\n");
      out.write("			var nextListItem = $(\"<li>\").append($(\"<a>\").attr(\"href\", \"#\").css(\"margin\", \"0 2px 0 2px\")\r\n");
      out.write("							.addClass(\"next viewDate\").attr(\"data-viewdate\", \"\").text(\"다음\"));\r\n");
      out.write("			ul.append(nextListItem);\r\n");
      out.write("			\r\n");
      out.write("			$(\".wrap-date\").append(ul);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\".theater-box\").on(\"click\", \".theater\", function(event) {\r\n");
      out.write("		    event.preventDefault();\r\n");
      out.write("			\r\n");
      out.write("			var clickedId = $(this).attr(\"id\");\r\n");
      out.write("			\r\n");
      out.write("			if($(\"#\"+clickedId).hasClass(\"selected\")) {\r\n");
      out.write("				$(\".theater-box .theater.selected\").removeClass(\"selected\");\r\n");
      out.write("				resetMovieList();\r\n");
      out.write("		    } else {\r\n");
      out.write("				$(\".theater-box .theater.selected\").removeClass(\"selected\");\r\n");
      out.write("				$(\"#\"+clickedId).addClass(\"selected\");\r\n");
      out.write("				resetMovieTime();\r\n");
      out.write("\r\n");
      out.write("				var url = new URL(window.location.href);\r\n");
      out.write("			    var params = url.searchParams;\r\n");
      out.write("			    var screeningDate = params.get(\"screeningDate\");\r\n");
      out.write("			    var theaterName = $(this).text();\r\n");
      out.write("			    \r\n");
      out.write("			    if(screeningDate === null) {\r\n");
      out.write("			    	screeningDate = $(\".datelist > .selected\").attr(\"data-date\");\r\n");
      out.write("			    } // end if\r\n");
      out.write("			    \r\n");
      out.write("		        searchMovie(screeningDate, theaterName);\r\n");
      out.write("			} // end else\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#movieList\").on(\"click\", \"li > label\", function(event) {\r\n");
      out.write("		    // label이 속한 li 요소를 찾습니다.\r\n");
      out.write("		    var li = $(this).parent(\"li\");\r\n");
      out.write("		    \r\n");
      out.write("		    // li 요소에서 input radio의 id 값을 가져옵니다.\r\n");
      out.write("		    var url = new URL(window.location.href);\r\n");
      out.write("		    var params = url.searchParams;\r\n");
      out.write("		    var screeningDate = params.get(\"screeningDate\");\r\n");
      out.write("		    var theaterName = $(\".theater.selected\").text();\r\n");
      out.write("		    var movieCode = li.find(\"input[type='radio']\").attr(\"id\");\r\n");
      out.write("		    \r\n");
      out.write("		    if(screeningDate === null) {\r\n");
      out.write("		    	screeningDate = $(\".datelist > .selected\").attr(\"data-date\");\r\n");
      out.write("		    } // end if\r\n");
      out.write("		    \r\n");
      out.write("		    $(\".wrap-timetable > .title\").remove();\r\n");
      out.write("		    $(\".wrap-timetable > .theater-info\").remove();\r\n");
      out.write("		    $(\".wrap-timetable > .time\").remove();\r\n");
      out.write("		    \r\n");
      out.write("		    searchTime(screeningDate, theaterName, movieCode);\r\n");
      out.write("		    //alert(movieCode+\",\"+screeningDate+\",\"+theaterName);\r\n");
      out.write("	    });\r\n");
      out.write("		\r\n");
      out.write(" 		$(\".wrap-timetable\").on(\"click\", \".time\", function(event) {\r\n");
      out.write("			var clickedId = $(this).attr(\"id\");\r\n");
      out.write("			\r\n");
      out.write("			if($(\"#\"+clickedId).hasClass(\"on\")) {\r\n");
      out.write("				 $(\".wrap-timetable .time.on\").removeClass(\"on\").css(\"color\", \"black\");\r\n");
      out.write("			} else {\r\n");
      out.write("				 $(\".wrap-timetable .time.on\").removeClass(\"on\").css(\"color\", \"black\");\r\n");
      out.write("				$(\"#\"+clickedId).addClass(\"on\").css(\"color\", \"white\");\r\n");
      out.write("			} // end else\r\n");
      out.write("		}); \r\n");
      out.write(" 		\r\n");
      out.write(" 		$(\".btn-rsv-next\").click(function(event) {\r\n");
      out.write(" 			var url = new URL(window.location.href);\r\n");
      out.write(" 		    var params = url.searchParams;\r\n");
      out.write(" 		    var screeningDate = params.get(\"screeningDate\");\r\n");
      out.write(" 		    var theaterName = $(\".theater.selected\").text();\r\n");
      out.write(" 		    var movieCode = $(\"#movieList>li\").find(\"input[type='radio']:checked\").attr(\"id\");\r\n");
      out.write(" 		    var movieTitle = $(\"#movieList>li\").find(\"input[type='radio']:checked\").attr(\"movieTitle\");\r\n");
      out.write(" 		    var movieRate = $(\"#movieList>li\").find(\"input[type='radio']:checked\").parent().find(\"span\").text();\r\n");
      out.write(" 		    var theaterNumber = $(\".wrap-timetable > .time.on\").attr(\"theaterNumber\");\r\n");
      out.write(" 		    var screeningCode = $(\".wrap-timetable > .time.on\").attr(\"id\");\r\n");
      out.write(" 		    var screeningTime = $(\".wrap-timetable > .time.on\").text();\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    if(screeningDate === null) {\r\n");
      out.write("		    	screeningDate = $(\".datelist > .selected\").attr(\"data-date\");\r\n");
      out.write("		    } // end if\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    // 유효성 검증\r\n");
      out.write(" 		    if(theaterName==\"\") {\r\n");
      out.write(" 		    	alert(\"영화관을 선택해주세요.\");\r\n");
      out.write(" 		    	return;\r\n");
      out.write(" 		    } // end if\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    if(movieTitle==\"\" || movieRate ==\"\") {\r\n");
      out.write(" 		    	alert(\"영화를 선택해주세요.\");\r\n");
      out.write(" 		    	return;\r\n");
      out.write(" 		    } // end if\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    if(theaterNumber ==\"\" || screeningCode == \"\" || screeningTime==\"\") {\r\n");
      out.write(" 		    	alert(\"영화 시간을 선택해주세요.\");\r\n");
      out.write(" 		    	return;\r\n");
      out.write(" 		    } // end if\r\n");
      out.write(" 		    \r\n");
      out.write(" 		   	if(movieRate == \"12\") {\r\n");
      out.write(" 		   		if(!confirm(\"12세 이상 등급\\n\\n본 영화는 12세 이상 관람 영화입니다.\\n\\n만 12세 미만 고객님(영, 유아포함)께서는 반드시 보호자(부모님 포함) 동반 하에 관람이 가능합니다.\")){\r\n");
      out.write(" 		   			return;\r\n");
      out.write(" 		   		} // end if\r\n");
      out.write(" 		   	} // end if\r\n");
      out.write("\r\n");
      out.write(" 		   	if(movieRate == \"15\") {\r\n");
      out.write(" 		   		if(!confirm(\"15세 이상 등급\\n\\n본 영화는 15세 이상 관람 영화입니다.\\n\\n만 15세 미만 고객님(영, 유아포함)께서는 반드시 보호자(부모님 포함) 동반 하에 관람이 가능합니다.\")){\r\n");
      out.write(" 		   			return;\r\n");
      out.write(" 		   		} // end if\r\n");
      out.write(" 		   	} // end if\r\n");
      out.write(" 		   	\r\n");
      out.write(" 		   	if(movieRate == \"18\") {\r\n");
      out.write(" 		   		if(!confirm(\"청소년 불가 등급\\n\\n본 영화는 청소년 관람 불가 영화입니다.\\n\\n\"\r\n");
      out.write(" 		   				+\"만 19세 미만 고객님(영, 유아포함)께서는 반드시 보호자(부모님 포함)를 동반하여도 관람하실 수 없습니다.\\n\"\r\n");
      out.write(" 		   				+\"(만 19세가 되는 해의 1월1일을 맞이한 사람은 제외)\\n\\n영화 관람 시, 반드시 신분증을 지참해주세요.\")){\r\n");
      out.write(" 		   			return;\r\n");
      out.write(" 		   		} // end if\r\n");
      out.write(" 		   	} // end if\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    // 다음 페이지 파라미터로 넘길 값들 JSON으로 변경 \r\n");
      out.write(" 		    var params = {\r\n");
      out.write(" 		    		screeningDate: screeningDate,\r\n");
      out.write(" 		    		theaterName: theaterName,\r\n");
      out.write(" 		    		theaterNumber: theaterNumber,\r\n");
      out.write(" 		    		movieCode: movieCode,\r\n");
      out.write(" 		    		movieTitle: movieTitle,\r\n");
      out.write(" 		    		movieRate: movieRate,\r\n");
      out.write(" 		    		screeningCode: screeningCode,\r\n");
      out.write(" 		    		screeningTime: screeningTime\r\n");
      out.write(" 		    }\r\n");
      out.write(" 		    \r\n");
      out.write(" 		   	var form = document.createElement('form');        //form엘리먼트 생성\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    form.setAttribute('method', 'post');              //POST 메서드 적용\r\n");
      out.write(" 		    form.setAttribute('action', \"selectSeat.jsp\");	      //데이터를 전송할 url\r\n");
      out.write(" 		    document.charset = \"utf-8\";                       //인코딩\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    for (var key in params) {	// key, value로 이루어진 객체 params\r\n");
      out.write(" 		        var hiddenField = document.createElement('input');\r\n");
      out.write(" 		        hiddenField.setAttribute('type', 'hidden'); //값 입력\r\n");
      out.write(" 		        hiddenField.setAttribute('name', key);\r\n");
      out.write(" 		        hiddenField.setAttribute('value', params[key]);\r\n");
      out.write(" 		        form.appendChild(hiddenField);\r\n");
      out.write(" 		    } // end for\r\n");
      out.write(" 		    \r\n");
      out.write(" 		    document.body.appendChild(form);\r\n");
      out.write(" 		    form.submit();	// 전송\r\n");
      out.write(" 		});\r\n");
      out.write("	}); // ready\r\n");
      out.write("\r\n");
      out.write("	// 날짜를 클릭하고 상영관을 클릭하면 상영 중인 영화를 가져옴\r\n");
      out.write("	function searchMovie(screeningDate, theaterName) {\r\n");
      out.write("		//alert(screeningDate+\",\"+theaterName);\r\n");
      out.write("		var request = new XMLHttpRequest();\r\n");
      out.write("	    \r\n");
      out.write("		request.open(\"Post\", \"http://localhost/theater_prj/MovieSearchServlet?screeningDate=\" \r\n");
      out.write("				+ encodeURIComponent(screeningDate)\r\n");
      out.write("				+ \"&theaterName=\" + encodeURIComponent(theaterName), true);\r\n");
      out.write("		request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n");
      out.write("		request.onreadystatechange = function() {\r\n");
      out.write("			if (request.readyState == 4 && request.status == 200) {\r\n");
      out.write("				// 응답을 받으면 searchProcess 함수 호출하여 처리\r\n");
      out.write("				searchMovieProcess(request);\r\n");
      out.write("			} // end if\r\n");
      out.write("		};\r\n");
      out.write("		request.send(null);\r\n");
      out.write("	} // searchMovie\r\n");
      out.write("	\r\n");
      out.write("	function searchMovieProcess(request) {\r\n");
      out.write("		var ul = document.getElementById(\"movieList\");\r\n");
      out.write("		var messageParagraph = ul.querySelector(\"p\");\r\n");
      out.write("		ul.innerHTML = \"\";\r\n");
      out.write("		\r\n");
      out.write("		// 서버에서 받은 JSON 데이터 파싱\r\n");
      out.write("		var object = JSON.parse(request.responseText);\r\n");
      out.write("		var result = object.result;\r\n");
      out.write("		\r\n");
      out.write("		if(result.length != 0) {\r\n");
      out.write("			for(var i = 0; i < result.length; i++) {\r\n");
      out.write("				var movieTitle = result[i].movieTitle;\r\n");
      out.write("				var movieRating = result[i].movieRating;\r\n");
      out.write("				var movieCode = result[i].movieCode;\r\n");
      out.write("	\r\n");
      out.write("				// 각 영화에 대한 li 요소 생성\r\n");
      out.write("		        var li = document.createElement(\"li\");\r\n");
      out.write("		        \r\n");
      out.write("		        // 라디오 생성\r\n");
      out.write("		        var radio = document.createElement(\"input\");\r\n");
      out.write("		        radio.type = \"radio\";\r\n");
      out.write("		        radio.className = \"p-movie-check\";\r\n");
      out.write("		        radio.setAttribute(\"id\", movieCode);\r\n");
      out.write("		        radio.setAttribute(\"name\", \"movie-check\");\r\n");
      out.write("		        radio.setAttribute(\"movieTitle\", movieTitle);\r\n");
      out.write("		        \r\n");
      out.write("		        // 영화 등급 표시를 위한 레이블 생성\r\n");
      out.write("		        var label = document.createElement(\"label\");\r\n");
      out.write("		        label.setAttribute(\"for\", movieCode);\r\n");
      out.write("		        label.setAttribute(\"style\", \"overflow:hidden; text-overflow: ellipsis; white-space: nowrap; scrollbar-gutter: stable;\");\r\n");
      out.write("	\r\n");
      out.write("		        var movieRatingSpan = document.createElement(\"span\");\r\n");
      out.write("		        if(movieRating == \"18\") {\r\n");
      out.write("		        	movieRatingSpan.className = \"rate-x\";\r\n");
      out.write("		        } else {\r\n");
      out.write("			        movieRatingSpan.className = \"rate-\"+ movieRating.toLowerCase();\r\n");
      out.write("		        } // end else\r\n");
      out.write("		        movieRatingSpan.textContent = movieRating; // 등급 값 설정\r\n");
      out.write("		        label.appendChild(movieRatingSpan);\r\n");
      out.write("		        label.appendChild(document.createTextNode(movieTitle));\r\n");
      out.write("		        \r\n");
      out.write("		        var checkSpan = document.createElement(\"span\");\r\n");
      out.write("		        checkSpan.className = \"check\";\r\n");
      out.write("		        \r\n");
      out.write("		        // li 요소에 라디오와 레이블 추가\r\n");
      out.write("		        li.appendChild(radio);\r\n");
      out.write("		        li.appendChild(label);\r\n");
      out.write("		        li.appendChild(checkSpan);\r\n");
      out.write("		        \r\n");
      out.write("		        // li 요소를 ul에 추가\r\n");
      out.write("		        ul.appendChild(li);\r\n");
      out.write("			} // end for\r\n");
      out.write("		} else {\r\n");
      out.write("			// p 태그 생성\r\n");
      out.write("			var paragraph = $(\"<p>\");\r\n");
      out.write("			paragraph.text(\"해당 날짜, 영화관에 상영 중인 영화가 없습니다.\").css({\"color\":\"blue\", \"text-align\":\"center\", \"margin-top\":\"30%\"});\r\n");
      out.write("			$(\"#movieList\").append(paragraph);\r\n");
      out.write("		} // end else\r\n");
      out.write("	} // searchProcess\r\n");
      out.write("	\r\n");
      out.write("	// 선택 날짜, 영화관, 영화의 시간 가져오기\r\n");
      out.write("	function searchTime(screeningDate, theaterName, movieCode) {\r\n");
      out.write("		// ajax에서 처리할 데이터 모음\r\n");
      out.write("		var param = {\r\n");
      out.write("				screeningDate: screeningDate,\r\n");
      out.write("				theaterName: theaterName,\r\n");
      out.write("				movieCode: movieCode\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type: 'POST',\r\n");
      out.write("			url: '/theater_prj/MovieTimeServlet',\r\n");
      out.write("			data: param,\r\n");
      out.write("			success: function(response) {\r\n");
      out.write("				// 받은 JSON 데이터를 파싱하여 표시\r\n");
      out.write("				var data = JSON.parse(response);\r\n");
      out.write("				\r\n");
      out.write("				$(\".wrap-timetable > p\").remove();\r\n");
      out.write("\r\n");
      out.write("				if(data == \"\") { // 데이터가 현재시간 이전이라면\r\n");
      out.write("					$(\".wrap-timetable\").append($(\"<p>\").text(\"영화관과 영화를 선택하면 시간표가 나옵니다.\").addClass(\"ready\"));\r\n");
      out.write("				} else {\r\n");
      out.write("					displayData(response);\r\n");
      out.write("				} // end else\r\n");
      out.write("			},\r\n");
      out.write("			error: function(xhr, status, error) {\r\n");
      out.write("				console.error('Error', error);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	} // searchTime\r\n");
      out.write("	\r\n");
      out.write("	// 시간표에 파싱한 데이터를 표시하는 함수\r\n");
      out.write("	function displayData(response) {\r\n");
      out.write("		var object = JSON.parse(response);\r\n");
      out.write("		\r\n");
      out.write("		var divTimeTable = $(\".wrap-timetable\");\r\n");
      out.write("		\r\n");
      out.write("		for(var i = 0; i < object.length; i++) {\r\n");
      out.write("			if(object[i].movieRating == \"18\") {\r\n");
      out.write("				 object[i].movieRating = \"x\";\r\n");
      out.write("	        } // end if\r\n");
      out.write("\r\n");
      out.write("			var divTitle = $(\"<div>\").addClass(\"title\");\r\n");
      out.write("			var spanRate = $(\"<span>\").addClass(\"rate-\"+object[i].movieRating.toLowerCase());\r\n");
      out.write("			var divTheaterInfo = $(\"<div>\").addClass(\"theater-info\");\r\n");
      out.write("			var divTime = $(\"<div>\").addClass(\"time\");\r\n");
      out.write("			\r\n");
      out.write("			spanRate.append(object[i].movieRating);\r\n");
      out.write("			divTitle.append(spanRate);\r\n");
      out.write("			divTitle.append(object[i].movieTitle);\r\n");
      out.write("			divTimeTable.append(divTitle);\r\n");
      out.write("			\r\n");
      out.write("			divTheaterInfo.attr(\"theaterName\", object[i].theaterName);\r\n");
      out.write("			divTheaterInfo.append(object[i].theaterNumber);\r\n");
      out.write("			divTimeTable.append(divTheaterInfo);\r\n");
      out.write("			\r\n");
      out.write("			divTime.append(object[i].screeningTime);\r\n");
      out.write("			divTime.css(\"margin-left\", \"25px\");\r\n");
      out.write("			divTime.css(\"padding\", \"8px 20px\");\r\n");
      out.write("			divTime.attr(\"screeningDate\", object[i].screeningDate);\r\n");
      out.write("			divTime.attr(\"id\", object[i].screeningCode);\r\n");
      out.write("			divTime.attr(\"theaterNumber\", object[i].theaterNumber);\r\n");
      out.write("			divTimeTable.append(divTime);\r\n");
      out.write("		} // end for\r\n");
      out.write("	} // displayData\r\n");
      out.write("		\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"top\">\r\n");
      out.write("\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("		<!-- S Header -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("<!-- E Header -->\r\n");
      out.write("\r\n");
      out.write("        ");
      user.VO.ReservingVO rsVO = null;
      rsVO = (user.VO.ReservingVO) _jspx_page_context.getAttribute("rsVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (rsVO == null){
        rsVO = new user.VO.ReservingVO();
        _jspx_page_context.setAttribute("rsVO", rsVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("rsVO"), request);

		LocalDateTime now = LocalDateTime.now();
		DateTimeFormatter dataDateFormat = DateTimeFormatter.ofPattern("yyyyMMdd");
		String today = now.format(dataDateFormat);
		pageContext.setAttribute("today", today);

		DateTimeFormatter selectDateFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		
		ReservingDAO rsDAO = ReservingDAO.getInstance();
		List<ReservingVO> screeningDates = new ArrayList<>();
		try {
		screeningDates = rsDAO.selectScreeningDate("N");
		pageContext.setAttribute("screeningDates", screeningDates);
		
		List<ReservingVO> theaters = new ArrayList<>();
		theaters = rsDAO.selectAllTheater();
		pageContext.setAttribute("theaters", theaters);
		
      out.write("<!-- Contaniner -->\r\n");
      out.write("		<div id=\"container\" class>\r\n");
      out.write("			<!-- Contents Area -->\r\n");
      out.write("			<div id=\"contents\" class style=\"padding-bottom: 0px;\">\r\n");
      out.write("				<!-- Contents Start -->\r\n");
      out.write("\r\n");
      out.write("				<!-- 예매 본문 -->\r\n");
      out.write("				<div class=\"popup\" data-theatercode=\"\" data-moviecode=\"\"\r\n");
      out.write("					data-playdate=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ today }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" data-screenplanid=\"\" data-playnumber=\"\">\r\n");
      out.write("					<div class=\"section-pop-top\">\r\n");
      out.write("						<!--<h3 class=\"title\">제목</h3>-->\r\n");
      out.write("						<a href=\"#\" class=\"btn-rsv-reset\">다시 예매</a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"section-pop-left\">\r\n");
      out.write("						<div class=\"wrap-date\">\r\n");
      out.write("							<h4 class=\"title\">날짜</h4>\r\n");
      out.write("							<input type=\"hidden\" name=\"cal\" id=\"rsvcal\" class=\"input-cal hasDatepicker\"\r\n");
      out.write("								value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ today }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"display: none;\">\r\n");
      out.write("							<ul class=\"cal-week\">\r\n");
      out.write("								<li><a href=\"#\" class=\"prev viewDate\" data-viewdate=\"\">이전</a></li>\r\n");
      out.write("								\r\n");
      out.write("								");

								StringBuilder classStringBuilder = new StringBuilder();
								
								for(int i = 0; i < 10; i++) {
									String dataDate = now.plusDays(i).format(dataDateFormat);
									String selectDate = now.plusDays(i).format(selectDateFormat);
									String dayOfWeek = now.plusDays(i).getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.KOREAN);
									int dayOfMonth = now.plusDays(i).getDayOfMonth();
									
									boolean isToday = i == 0;
									boolean isSelected = request.getParameter("screeningDate") != null && request.getParameter("screeningDate").equals(dataDate)
														|| (i == 0 && request.getParameter("screeningDate") == null);
									boolean isScreening = false;
									String isDisabled = "";
									
									classStringBuilder.append(isToday ? "today selected " : ""); // 오늘 날짜인 경우 today 클래스 추가
									classStringBuilder.append(isSelected ? "selected " : ""); // 선택된 날짜인 경우 selected 클래스 추가
									classStringBuilder.append(dayOfWeek.equals("토") ? "sat " : ""); // 토요일인 경우 sat 클래스 추가
									classStringBuilder.append(dayOfWeek.equals("일") ? "sun " : ""); // 일요일인 경우 sun 클래스 추가
									
									for(int j = 0; j < screeningDates.size(); j++) {
										rsVO = screeningDates.get(j);
										
										if(rsVO.getScreeningDate().equals(dataDate)) {
											isDisabled = "";
											isScreening = true;
										} // end if
										
										if(!isScreening) {
											isDisabled = "onclick=\"return false\"";
										} // end if
									} // end for
									
									classStringBuilder.append(isScreening ? "" : "disabled "); 
									
									String classString = classStringBuilder.toString();
								
      out.write("<li class=\"datelist\">\r\n");
      out.write("										<a href=\"ticket.jsp?screeningDate=");
      out.print( dataDate );
      out.write("\" data-date=\"");
      out.print( dataDate );
      out.write("\"\r\n");
      out.write("										data-selectdate=\"");
      out.print( selectDate );
      out.write("\" class=\"");
      out.print( classString );
      out.write('"');
      out.write(' ');
      out.print(isDisabled);
      out.write(" >\r\n");
      out.write("										<span class=\"day\">");
      out.print( dayOfWeek );
      out.write("</span>");
      out.print( dayOfMonth );
      out.write("</a>\r\n");
      out.write("									</li>\r\n");
      out.write("								");
 classStringBuilder.delete(0, classStringBuilder.length());
								} // end for
								String dataDate2 = now.plusDays(10).format(dataDateFormat); 
      out.write("<li><a href=\"ticket.jsp?screeningDate=");
      out.print( dataDate2 );
      out.write("\" class=\"next viewDate\" data-viewdate=\"\" >다음</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"wrap-theater\">\r\n");
      out.write("							<h4 class=\"title\">영화관</h4>\r\n");
      out.write("							<div class=\"theater-box\" id=\"theaterBox\">\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"wrap-theater wrap-movielist\">\r\n");
      out.write("							<h4 class=\"title\">영화</h4>\r\n");
      out.write("							<ul class=\"list-movie-name\" id=\"movieList\" style=\"height: 390px;\">\r\n");
      out.write("								<p class=\"ready\" style=\"color: #7d7d7d; text-align: center; margin-top: 30%;\">날짜와 영화관을 선택하면 영화가 나옵니다.</p>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!--.section-pop-left-->\r\n");
      out.write("\r\n");
      out.write("					<div class=\"section-pop-right\">\r\n");
      out.write("						<div class=\"wrap-timetable-head\" style = \"align-content: center;\">\r\n");
      out.write("							<h4 class=\"title\">시간표</h4>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"wrap-timetable\" style=\" height: 510px;\">\r\n");
      out.write("							<p class=\"ready\">영화관과 영화를 선택하면 시간표가 나옵니다.</p>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!--.section-pop-left-->\r\n");
      out.write("\r\n");
      out.write("					<div class=\"section-pop-bottom\">\r\n");
      out.write("						<div class=\"wrap-rsv-select\">\r\n");
      out.write("							<a href=\"#\" class=\"btn-rsv-next\">다음</a>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				");

				} catch (SQLException se) {			
				
      out.write("\r\n");
      out.write("					alert(\"죄송합니다. 잠시 후 다시 시도해주세요.\");\r\n");
      out.write("				");

					se.printStackTrace();
				} // end catch
				
      out.write("<!--/ Contents End -->\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- /Contents Area -->\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- E Contaniner -->\r\n");
      out.write("\r\n");
      out.write("		<!-- S 예매하기 및 TOP Fixed 버튼 -->\r\n");
      out.write("		<div class=\"fixedBtn_wrap\">\r\n");
      out.write("\r\n");
      out.write("			<a href=\"#none\" class=\"btn_gotoTop\"><img\r\n");
      out.write("				src=\"https://img.cgv.co.kr/R2014/images/common/btn/gotoTop.png\"\r\n");
      out.write("				alt=\"최상단으로 이동\" /></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- E 예매하기 및 TOP Fixed 버튼 -->\r\n");
      out.write("\r\n");
      out.write("		<!-- S footer_area -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("<!-- E footer_area -->\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /asd/jsp/ticket.jsp(667,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("rsVO");
      // /asd/jsp/ticket.jsp(667,7) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ theaters }", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /asd/jsp/ticket.jsp(667,7) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("i");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("<a href=\"ticket.jsp?screeningDate=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.screeningDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&theaterName=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ rsVO.theaterName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("								 	class=\"theater\" id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ rsVO.theaterName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ rsVO.theaterName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
